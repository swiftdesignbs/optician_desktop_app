// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema8 extends i0.VersionedSchema {
  Schema8({required super.database}) : super(version: 8);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    productMaster,
    customer,
    opticProducts,
    categories,
    fitters,
    suppliers,
    orders,
  ];
  late final Shape0 productMaster = Shape0(
      source: i0.VersionedTable(
        entityName: 'product_master',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 customer = Shape1(
      source: i0.VersionedTable(
        entityName: 'customer',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_12,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_17,
          _column_18,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 opticProducts = Shape2(
      source: i0.VersionedTable(
        entityName: 'optic_products',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_3,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 categories = Shape3(
      source: i0.VersionedTable(
        entityName: 'categories',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_48,
          _column_49,
          _column_17,
          _column_50,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fitters = Shape4(
      source: i0.VersionedTable(
        entityName: 'fitters',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_51,
          _column_52,
          _column_53,
          _column_27,
          _column_26,
          _column_54,
          _column_55,
          _column_23,
          _column_29,
          _column_56,
          _column_57,
          _column_17,
          _column_50,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 suppliers = Shape5(
      source: i0.VersionedTable(
        entityName: 'suppliers',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_58,
          _column_59,
          _column_23,
          _column_53,
          _column_60,
          _column_61,
          _column_62,
          _column_63,
          _column_64,
          _column_27,
          _column_26,
          _column_29,
          _column_54,
          _column_65,
          _column_66,
          _column_67,
          _column_17,
          _column_18,
          _column_68,
          _column_69,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 orders = Shape6(
      source: i0.VersionedTable(
        entityName: 'orders',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_70,
          _column_71,
          _column_72,
          _column_73,
          _column_74,
          _column_75,
          _column_76,
          _column_77,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get productCode =>
      columnsByName['product_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get productName =>
      columnsByName['product_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get material =>
      columnsByName['material']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get brand =>
      columnsByName['brand']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get subBrand =>
      columnsByName['sub_brand']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get size =>
      columnsByName['size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get colors =>
      columnsByName['colors']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lensType1 =>
      columnsByName['lens_type1']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lensType2 =>
      columnsByName['lens_type2']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get shape =>
      columnsByName['shape']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get gender =>
      columnsByName['gender']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowNegativeStock =>
      columnsByName['allow_negative_stock']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get boxPack =>
      columnsByName['box_pack']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get rack =>
      columnsByName['rack']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get modelNo =>
      columnsByName['model_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get createdBy =>
      columnsByName['created_by']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate =>
      columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_0(String aliasedName) =>
    i1.GeneratedColumn<int>('id', aliasedName, false,
        hasAutoIncrement: true,
        type: i1.DriftSqlType.int,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('PRIMARY KEY AUTOINCREMENT'));
i1.GeneratedColumn<String> _column_1(String aliasedName) =>
    i1.GeneratedColumn<String>('product_code', aliasedName, false,
        additionalChecks: i1.GeneratedColumn.checkTextLength(
            minTextLength: 1, maxTextLength: 50),
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>('product_name', aliasedName, false,
        additionalChecks: i1.GeneratedColumn.checkTextLength(
            minTextLength: 1, maxTextLength: 100),
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_3(String aliasedName) =>
    i1.GeneratedColumn<String>('category', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('material', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_5(String aliasedName) =>
    i1.GeneratedColumn<String>('brand', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_6(String aliasedName) =>
    i1.GeneratedColumn<String>('sub_brand', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_7(String aliasedName) =>
    i1.GeneratedColumn<String>('size', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>('colors', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>('lens_type1', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>('lens_type2', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_11(String aliasedName) =>
    i1.GeneratedColumn<String>('shape', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_12(String aliasedName) =>
    i1.GeneratedColumn<String>('gender', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_13(String aliasedName) =>
    i1.GeneratedColumn<bool>('allow_negative_stock', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("allow_negative_stock" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<String> _column_14(String aliasedName) =>
    i1.GeneratedColumn<String>('box_pack', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_15(String aliasedName) =>
    i1.GeneratedColumn<String>('rack', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_16(String aliasedName) =>
    i1.GeneratedColumn<String>('model_no', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>('created_by', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_18(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_date', aliasedName, true,
        type: i1.DriftSqlType.dateTime);

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get firstName =>
      columnsByName['first_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get middleName =>
      columnsByName['middle_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastName =>
      columnsByName['last_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mobile =>
      columnsByName['mobile']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get gender =>
      columnsByName['gender']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get customerType =>
      columnsByName['customer_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get city =>
      columnsByName['city']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get country =>
      columnsByName['country']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pincode =>
      columnsByName['pincode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get createdBy =>
      columnsByName['created_by']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate =>
      columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_19(String aliasedName) =>
    i1.GeneratedColumn<String>('first_name', aliasedName, false,
        additionalChecks: i1.GeneratedColumn.checkTextLength(
            minTextLength: 1, maxTextLength: 50),
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_20(String aliasedName) =>
    i1.GeneratedColumn<String>('middle_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('last_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_22(String aliasedName) =>
    i1.GeneratedColumn<String>('mobile', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_23(String aliasedName) =>
    i1.GeneratedColumn<String>('email', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_24(String aliasedName) =>
    i1.GeneratedColumn<String>('address', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>('customer_type', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_26(String aliasedName) =>
    i1.GeneratedColumn<String>('city', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_27(String aliasedName) =>
    i1.GeneratedColumn<String>('state', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_28(String aliasedName) =>
    i1.GeneratedColumn<String>('country', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_29(String aliasedName) =>
    i1.GeneratedColumn<String>('pincode', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get productName =>
      columnsByName['product_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get hsnCode =>
      columnsByName['hsn_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get price =>
      columnsByName['price']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get stock =>
      columnsByName['stock']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get igst =>
      columnsByName['igst']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get sgst =>
      columnsByName['sgst']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get cgst =>
      columnsByName['cgst']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get gst =>
      columnsByName['gst']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get discount =>
      columnsByName['discount']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<String> get unit =>
      columnsByName['unit']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get discountPrice =>
      columnsByName['discount_price']! as i1.GeneratedColumn<double>;
}

i1.GeneratedColumn<String> _column_30(String aliasedName) =>
    i1.GeneratedColumn<String>('product_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_31(String aliasedName) =>
    i1.GeneratedColumn<String>('hsn_code', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<double> _column_32(String aliasedName) =>
    i1.GeneratedColumn<double>('price', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<String> _column_33(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_34(String aliasedName) =>
    i1.GeneratedColumn<int>('stock', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<double> _column_35(String aliasedName) =>
    i1.GeneratedColumn<double>('igst', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_36(String aliasedName) =>
    i1.GeneratedColumn<double>('sgst', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_37(String aliasedName) =>
    i1.GeneratedColumn<double>('cgst', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_38(String aliasedName) =>
    i1.GeneratedColumn<double>('gst', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_39(String aliasedName) =>
    i1.GeneratedColumn<double>('discount', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<String> _column_40(String aliasedName) =>
    i1.GeneratedColumn<String>('unit', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<double> _column_41(String aliasedName) =>
    i1.GeneratedColumn<double>('discount_price', aliasedName, true,
        type: i1.DriftSqlType.double);

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get categoryCode =>
      columnsByName['category_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get commission =>
      columnsByName['commission']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get classification =>
      columnsByName['classification']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get allowBilling =>
      columnsByName['allow_billing']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get maintainSingleQty =>
      columnsByName['maintain_single_qty']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get defaultPurchaseTax =>
      columnsByName['default_purchase_tax']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get defaultSalesTax =>
      columnsByName['default_sales_tax']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get createdBy =>
      columnsByName['created_by']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate =>
      columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>('category_code', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_43(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_44(String aliasedName) =>
    i1.GeneratedColumn<String>('commission', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_45(String aliasedName) =>
    i1.GeneratedColumn<String>('classification', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>('allow_billing', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_47(String aliasedName) =>
    i1.GeneratedColumn<String>('maintain_single_qty', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_48(String aliasedName) =>
    i1.GeneratedColumn<String>('default_purchase_tax', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_49(String aliasedName) =>
    i1.GeneratedColumn<String>('default_sales_tax', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_50(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_date', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression('CURRENT_TIMESTAMP'));

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fitterName =>
      columnsByName['fitter_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fitterCode =>
      columnsByName['fitter_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address1 =>
      columnsByName['address1']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get city =>
      columnsByName['city']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get telephone =>
      columnsByName['telephone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get landline =>
      columnsByName['landline']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pincode =>
      columnsByName['pincode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get days =>
      columnsByName['days']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get fees =>
      columnsByName['fees']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<String> get createdBy =>
      columnsByName['created_by']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate =>
      columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_51(String aliasedName) =>
    i1.GeneratedColumn<String>('fitter_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_52(String aliasedName) =>
    i1.GeneratedColumn<String>('fitter_code', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_53(String aliasedName) =>
    i1.GeneratedColumn<String>('address1', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_54(String aliasedName) =>
    i1.GeneratedColumn<String>('telephone', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_55(String aliasedName) =>
    i1.GeneratedColumn<String>('landline', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_56(String aliasedName) =>
    i1.GeneratedColumn<int>('days', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<double> _column_57(String aliasedName) =>
    i1.GeneratedColumn<double>('fees', aliasedName, true,
        type: i1.DriftSqlType.double);

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get supplierCode =>
      columnsByName['supplier_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get supplierName =>
      columnsByName['supplier_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get email =>
      columnsByName['email']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address1 =>
      columnsByName['address1']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address2 =>
      columnsByName['address2']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cstNo =>
      columnsByName['cst_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tinNo =>
      columnsByName['tin_no']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get supplierType =>
      columnsByName['supplier_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get paymentMode =>
      columnsByName['payment_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get state =>
      columnsByName['state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get city =>
      columnsByName['city']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pincode =>
      columnsByName['pincode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get telephone =>
      columnsByName['telephone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fax =>
      columnsByName['fax']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contactPerson1 =>
      columnsByName['contact_person1']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contactPerson2 =>
      columnsByName['contact_person2']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get createdBy =>
      columnsByName['created_by']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdDate =>
      columnsByName['created_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get computeProductDate =>
      columnsByName['compute_product_date']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get computeOverallDesc =>
      columnsByName['compute_overall_desc']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_58(String aliasedName) =>
    i1.GeneratedColumn<String>('supplier_code', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_59(String aliasedName) =>
    i1.GeneratedColumn<String>('supplier_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_60(String aliasedName) =>
    i1.GeneratedColumn<String>('address2', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_61(String aliasedName) =>
    i1.GeneratedColumn<String>('cst_no', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_62(String aliasedName) =>
    i1.GeneratedColumn<String>('tin_no', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_63(String aliasedName) =>
    i1.GeneratedColumn<String>('supplier_type', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_64(String aliasedName) =>
    i1.GeneratedColumn<String>('payment_mode', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_65(String aliasedName) =>
    i1.GeneratedColumn<String>('fax', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_66(String aliasedName) =>
    i1.GeneratedColumn<String>('contact_person1', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_67(String aliasedName) =>
    i1.GeneratedColumn<String>('contact_person2', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_68(String aliasedName) =>
    i1.GeneratedColumn<String>('compute_product_date', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_69(String aliasedName) =>
    i1.GeneratedColumn<String>('compute_overall_desc', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<int> get id =>
      columnsByName['id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get productId =>
      columnsByName['product_id']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get quantity =>
      columnsByName['quantity']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<double> get pricePerUnit =>
      columnsByName['price_per_unit']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get gstPercent =>
      columnsByName['gst_percent']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get totalPrice =>
      columnsByName['total_price']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<DateTime> get orderDate =>
      columnsByName['order_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get customerName =>
      columnsByName['customer_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get paymentMethod =>
      columnsByName['payment_method']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_70(String aliasedName) =>
    i1.GeneratedColumn<int>('product_id', aliasedName, false,
        type: i1.DriftSqlType.int,
        $customConstraints: 'REFERENCES optic_products(id)');
i1.GeneratedColumn<int> _column_71(String aliasedName) =>
    i1.GeneratedColumn<int>('quantity', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const CustomExpression('1'));
i1.GeneratedColumn<double> _column_72(String aliasedName) =>
    i1.GeneratedColumn<double>('price_per_unit', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_73(String aliasedName) =>
    i1.GeneratedColumn<double>('gst_percent', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_74(String aliasedName) =>
    i1.GeneratedColumn<double>('total_price', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<DateTime> _column_75(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('order_date', aliasedName, false,
        type: i1.DriftSqlType.dateTime,
        defaultValue: const CustomExpression('CURRENT_TIMESTAMP'));
i1.GeneratedColumn<String> _column_76(String aliasedName) =>
    i1.GeneratedColumn<String>('customer_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_77(String aliasedName) =>
    i1.GeneratedColumn<String>('payment_method', aliasedName, true,
        type: i1.DriftSqlType.string);
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 7:
        final schema = Schema8(database: database);
        final migrator = i1.Migrator(database, schema);
        await from7To8(migrator, schema);
        return 8;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from7To8: from7To8,
    ));
